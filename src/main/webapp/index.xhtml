<?xml version="1.0" encoding="UTF-8"?>
<!--
  Created by IntelliJ IDEA.
  User: caioe
  Date: 17/11/2021
  Time: 19:30
-->
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">


<h:head>
    <title>JSF-training</title>
</h:head>

<h:body>

    <c:set var="numbersList" value="#{[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}"/>

    <p:importEnum type="br.com.example.jsftraining.model.enums.Shift"
                  var="Shift"
                  allSuffix="ALL_ENUM_VALUES"/>

    <h1>Hello JSF</h1>
    <br/>
    <h:outputLabel value="#{studentBean.student.name}"/>
    <br/>
    <h:outputLabel value="#{studentBean.student['surname']}"/>
    <br/>
<!--    eq is equals-->
    <h:outputLabel value="#{studentBean.student.grade1 eq studentBean.student.grade2}"/>
    <br/>
    <h:outputLabel value="#{studentBean.student.grade1 == studentBean.student.grade2}"/>
    <br/>
<!--    and is && (&amp;&amp;)-->
    <h:outputLabel value="#{studentBean.student.grade1 eq studentBean.student.grade2 and
    studentBean.student.name.equals('Caio')}"/>
    <br/>
    <h:outputText value="Grade comparator"/>
    <br/>
<!--    le is less or equal and lt is less than-->
    <h:outputLabel value="#{studentBean.student.grade1 le studentBean.student.grade2}"/>
    <br/>
    <h:outputLabel value="#{studentBean.student.grade1 eq 0 ? 'zero' : 'not zero'}"/>
    <br/>
<!--    his value will be 40 just here, it's no.studentt change in the bean -->
    <h:outputLabel value="#{studentBean.student.grade1 = 40}"/>
    <br/>
<!--    concatening strings before render the p.studentage-->
    <h:outputLabel value="#{studentBean.student.name += ' something'}"/>
    <br/>
<!--    Reserved words-->
<!--    and = &&-->
<!--    or = ||-->
<!--    not = !-->
<!--    eq = ==-->
<!--    ne = !=-->
<!--    lt = <-->
<!--    gt = >-->
<!--    le = <=-->
<!--    ge = >=-->
<!--    div = / (division)-->
<!--    mod = %-->
<!--    true - false - null-->
<!--    instanceof - empty - not empty-->

    <h:outputText value="ENUM"/>
    <br/>
    <h:outputLabel value="#{studentBean.student.shift eq 'MORNING'}"/>
    <br/>
<!--    enums with primefaces-->
    <h:outputLabel value="#{studentBean.student.shift eq Shift.AFTERNOON}"/>
    <br/>
    <h:outputLabel value="#{studentBean.student.shift.equals(Shift.NIGHT)}"/>
    <br/>
<!--    ARRAYS-->
    <h:outputLabel value="#{studentBean.array[0]} #{studentBean.array[1]} #{studentBean.array[2]}"/>
    <br/>
<!--    ui repeat array-->
    <ui:repeat value="${studentBean.array}" var="anime">
        <h:outputLabel value="#{anime}"/>
    </ui:repeat>
    <br/>
    <!--    LIST-->
    <h:outputLabel value="#{studentBean.names.get(0)} #{studentBean.names.get(1)}
    #{studentBean.names.get(2)} #{studentBean.names.get(3)}"/>
    <br/>
    <!--    ui repeat list-->
    <ui:repeat value="${studentBean.names}" var="name">
        <h:outputLabel value="#{name}"/>
    </ui:repeat>
    <br/>
    <!--    ui repeat set-->
    <ui:repeat value="${studentBean.namesSet.toArray()}" var="name">
        <h:outputLabel value="#{name}"/>
    </ui:repeat>
    <br/>
    <!--    map-->
    <h:outputLabel value="#{studentBean.namesMap.get('1- ')}"/>
    <br/>
    <!--    ui repeat map-->
    <ui:repeat value="${studentBean.namesMap.entrySet().toArray()}" var="entry">
        <h:outputLabel value="#{entry.key} #{entry.value}"/>
    </ui:repeat>
    <br/>
    <h:outputText value="#{studentBean.func()}"/>
    <h:outputText value="#{studentBean.func('test param')}"/>
    <h:outputText value="#{studentBean.func(studentBean.student.name)}"/>
    <h:outputText value="#{studentBean.funcWithReturn(studentBean.student.name)}"/>
    <br/>
    <br/>
<!--    action = wait a return (string) and redirect to the informed page.-->
<!--    actionListener = don't wait a return, but execute the code within function-->
    <h:form>
        <p:commandButton value="Go To index 2" action="#{studentBean.goToIndex2()}"/>
    </h:form>
    <br/>
    <!-- printing css with expression language-->
    <ui:repeat value="${studentBean.names}" var="name" varStatus="status">
        <h:outputLabel value="#{name}"
        style="color: #{status.index mod 2 == 0 ? 'red' : 'green'}"/>
    </ui:repeat>
    <br/>
    <br/>
<!--    sending values with expression language to javascript functions-->
    <p:commandButton value="Throw magic" onclick="doMagic('Magic Test')"/>
    <br/>
    <p:commandButton value="Alert name" onclick="alertName('#{studentBean.student.name}')"/>
    <br/>
    <br/>
    <h:form id="form">
        <p:commandButton value="Show grades">
            <f:ajax listener="#{studentBean.showGrades()}" render="gradesGrid"/>
        </p:commandButton>
        <br/>
        <p:commandButton value="Hide grades">
            <f:ajax listener="#{studentBean.hideGrades()}" render="gradesGrid"/>
        </p:commandButton>
        <br/>
        <br/>
        <h:panelGrid id="gradesGrid">
            <h:outputText value="#{studentBean.student.name}"/>
            <h:outputText value="#{studentBean.student.surname}"/>
            <h:outputText value="#{studentBean.student.shift}"/>
            <h:outputText value="#{studentBean.student.grade1}" rendered="#{studentBean.showGrades}"/>
            <h:outputText value="#{studentBean.student.grade2}" rendered="#{studentBean.showGrades}"/>
            <h:outputText value="#{studentBean.student.grade3}"/>
        </h:panelGrid>
        <br/>
        <p:commandButton value="Show link">
            <f:ajax listener="#{studentBean.showLink()}" render="pgLink"/>
        </p:commandButton>
        <br/>
        <p:commandButton value="Hide link">
            <f:ajax listener="#{studentBean.hideLink()}" render="pgLink"/>
        </p:commandButton>
        <br/>
        <h:panelGroup id="pgLink">
            <ui:fragment id="fragmentLink" rendered="#{studentBean.showLink}">
                <a href="http://www.google.com.br" target="_blank">Google</a>
            </ui:fragment>
        </h:panelGroup>
    </h:form>
    <br/>
    <br/>

<!--    Lambdas-->

    #{(sum -> sum + num) (10)}
    <br/>
    #{((n1, n2, n3) -> n1 * n2 * n3) (1, 5, 10)}
    <br/>
    #{x -> x * x * x (2)}
    <br/>
    #{cube = (x -> x * x * x); cube(10)}
    #{cube = (x -> x * x * x)}
    #{cube(10)}
    <br/>
    <h:form>
        <p:commandButton value="Cube calculate"
                         actionListener="#{studentBean.cubeCalculate((x -> x * x * x), 10)}"/>
    </h:form>
    <br/>
<!--    List-->
    <ui:repeat value="#{['Caio', ' is a ', 'monster!']}" var="monster">
        #{monster}
    </ui:repeat>
    <br/>
<!--    &lt;!&ndash;    Set&ndash;&gt;-->
<!--    <ui:repeat value="#{{'Caio', ' is a ', 'monster!', 'monster!'}}" var="monster">-->
<!--        #{monster}-->
<!--    </ui:repeat>-->
<!--    <br/>-->
<!--    &lt;!&ndash;    Map&ndash;&gt;-->
<!--    <ui:repeat value="#{{'Caio': 'monster!', 'Ronaldo': 'king!'}}" var="map">-->
<!--        <ui:repeat value="#{map.entrySet.toArray()}" var="entry">-->
<!--            #{entry.key} - #{entry.value}-->
<!--        </ui:repeat>-->
<!--        #{map}-->
<!--    </ui:repeat>-->

    <ui:repeat value="#{[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].stream().filter(v -> v > 5).toList()}" var="result">
        #{result}
    </ui:repeat>
    <br/>
<!--    lambda with variable from jstl-->
    <ui:repeat value="#{numbersList.stream().filter(v -> v > 5).toList()}" var="result">
        #{result}
    </ui:repeat>
    <br/>
    #{numbersList.stream().average().get()}
    <br/>
    #{numbersList.stream().sum()}
    <br/>
    #{numbersList.stream().filter(v -> v > 5).sum()}

</h:body>


<script type="text/javascript">
    function doMagic(magic) {
        alert(magic);
    }
    function alertName(name) {
        alert(name);
    }
</script>
</html>